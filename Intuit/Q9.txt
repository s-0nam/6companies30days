class Solution {
public:
    int n,m; vector<vector<int>>h;
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {
        n=heights.size(),m=heights[0].size();
        vector<vector<int>>ans,dp1,dp2;
        vector<int>t(m,0);
        for(int i=0;i<n;i++) h.push_back(heights[i]),dp1.push_back(t),dp2.push_back(t);
        for(int i=0;i<n;i++) solve(i,0,-1,dp1);
        for(int j=0;j<m;j++) solve(0,j,-1,dp1);
        for(int i=0;i<n;i++) solve(i,m-1,-1,dp2);
        for(int j=0;j<m;j++) solve(n-1,j,-1,dp2);
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(dp1[i][j]&&dp2[i][j]){
                    vector<int>t; t.push_back(i),t.push_back(j);
                    ans.push_back(t);
                }
            }
        }
        return ans;
    }
    void solve(int i,int j,int prev,vector<vector<int>>&vis){
        if(i<0||j<0||i==n||j==m||vis[i][j]||h[i][j]<prev) return;
        vis[i][j]=1;
        solve(i+1,j,h[i][j],vis);
        solve(i-1,j,h[i][j],vis);
        solve(i,j-1,h[i][j],vis);
        solve(i,j+1,h[i][j],vis);
    }
};