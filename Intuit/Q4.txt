// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


class Solution
{
    public:
    //Function to find the largest number after k swaps.
    int n;
    void helper(string s, string &res,int k,int i){
        if(k == 0||i==n)
            return; 
        char mxi=s[i];
        for(int j = i + 1 ; j < s.length() ; j++){
            mxi=max(mxi,s[j]);
        }
        if(mxi!=s[i]){
            k--;
        }
        for(int j =  s.length()  - 1; j >= i; j --){
            if(s[j] == mxi){
                swap(s[j],s[i]);
                res = max(res,s);
                helper(s,res,k,i + 1);
                swap(s[j],s[i]);
            }
        }
    }
    string findMaximumNum(string s, int k)
    {
       // code here.
       string res = s; n=s.size();
       helper(s,res,k,0);
       return res;
    }
};

// { Driver Code Starts.

int main()
{
    int t, k;
    string str;

    cin >> t;
    while (t--)
    {
        cin >> k >> str;
        Solution ob;
        cout<< ob.findMaximumNum(str, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends