// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    vector<vector<string>> displayContacts(int n, string cont[], string s)
    {
        
        //for(int i=0;i<n;i++) cont.push_back(contact[i]);
        //sort(cont.begin(),cont.end());
        vector<vector<string>> ans(s.size());
        for(int i=0;i<s.size();i++){
            string ts=s.substr(0,i+1); set<string>temp;
            for(int j=0;j<n;j++){
                string p=cont[j].substr(0,i+1);
                if(p==ts) temp.insert(cont[j]);
            }
            if(temp.empty()) temp.insert("0");
            for(auto l:temp) ans[i].push_back(l);
            //ans.push_back(temp);
        }
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        string contact[n], s;
        for(int i = 0;i < n;i++)
            cin>>contact[i];
        cin>>s;
        
        Solution ob;
        vector<vector<string>> ans = ob.displayContacts(n, contact, s);
        for(int i = 0;i < s.size();i++){
            for(auto u: ans[i])
                cout<<u<<" ";
            cout<<"\n";
        }
    }
    return 0;
}  // } Driver Code Ends