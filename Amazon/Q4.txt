// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    char name='A';  string ans; int bracket[501][501];
    string matrixChainOrder(int p[], int n){
        int m[n][n];
        for(int i=1;i<n;i++) m[i][i]=0;
        for(int l=2;l<n;l++){
            for(int i=1;i<n-l+1;i++){
                int j=i+l-1; m[i][j]=1e9;
                for(int k=i;k<j;k++){
                    int q=m[i][k]+m[k+1][j]+p[i-1]*p[k]*p[j];
                    if(q<m[i][j]){
                        m[i][j]=q; bracket[i][j]=k;
                    }
                }
            }
        }
        print(1,n-1);
        return ans;
    } 
    void print(int i,int j){
        if(i==j){
            ans.push_back(name); name++; return;
        }
        ans.push_back('(');
        print(i,bracket[i][j]); print(bracket[i][j]+1,j); ans.push_back(')');
        return;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int p[n];
        for(int i = 0;i < n;i++)
            cin>>p[i];
        
        Solution ob;
        cout<<ob.matrixChainOrder(p, n)<<"\n";
    }
    return 0;
}  // } Driver Code Ends