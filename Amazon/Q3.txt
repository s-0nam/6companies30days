#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution {
  public:
    vector<int> max_of_subarrays(vector<int> arr, int n, int k) {
        // vector<int>ans;  deque<int>q; q.push_back(0);
        // for(int i=1;i<k;i++){
        //     while(true){
        //         if(q.empty()) break;
        //         if(arr[i]>=arr[q.back()]) q.pop_back();
        //         else break;
        //     }
        //     q.push_back(i);
        // }
        // for(int i=k;i<n;i++){
        //      ans.push_back(arr[q.front()]);
        //      while(true){
        //         if(q.empty()) break;
        //         if(arr[i]>=arr[q.back()]||q.back()<i-k-1) q.pop_back();
        //         else break;
        //     }
        //     q.push_back(i);
        // }
        // return ans;
        vector<int>ans;  priority_queue<pair<int,int>>p;
        for(int i=0;i<n;i++){
            p.push({arr[i],i});
            if(i>=k-1){
                while(true){
                    auto it=p.top(); if(it.second<i-k+1) p.pop();
                    else{
                        ans.push_back(it.first); break;
                    }
                }
            }
        }
        return ans;
    }
};

// { Driver Code Starts.

int main() {

    int t;
    cin >> t;

    while (t--) {

        int n, k;
        cin >> n >> k;

        vector<int> arr(n);
        for (int i = 0; i < n; i++) cin >> arr[i];
        Solution ob;
        vector<int> res = ob.max_of_subarrays(arr, n, k);
        for (int i = 0; i < res.size(); i++) cout << res[i] << " ";
        cout << endl;
    }

    return 0;
}  // } Driver Code Ends