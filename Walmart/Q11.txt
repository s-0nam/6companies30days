class Solution {
public:
    int m=1e9+7;
    int maxPerformance(int n, vector<int>& speed, vector<int>& ef, int k) {
        long long ans=0; vector<pair<int,int>>p;
        for(int i=0;i<n;i++) p.push_back({ef[i],speed[i]});
        sort(p.begin(),p.end());
        priority_queue<int,vector<int>,greater<int>>q;
        long long sum=0;
        for(int i=n-1;i>=0;i--){
            q.push(p[i].second); sum+=p[i].second;
            while(q.size()>k){
                sum-=q.top();
                q.pop();
            }
            ans=max(ans,sum*p[i].first); //cout<<sum<<endl;
        }
        ans%=m; return ans;
    }
};