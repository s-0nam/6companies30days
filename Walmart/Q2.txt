class Solution {
public:
    int n; vector<int>a,p; int dp[501][501];
    bool stoneGame(vector<int>& piles) {
        n=piles.size(); a.push_back(0);
        for(auto i:piles) a.push_back(i);
        p=a;
        for(int i=1;i<=n;i++) p[i]+=p[i-1];
        for(int i=0;i<=n;i++){
            for(int j=0;j<=n;j++) dp[i][j]=-1;
        }
        int a=rec(1,n,1);
        return dp[1][n]>p[n]-dp[1][n];
     }
    int rec(int i,int j,int f){
        if(j<i) return 0;
        if(dp[i][j]==-1){
            dp[i][j]=max(a[i]+rec(i+1,j,0),a[j]+rec(i,j-1,0));
        }
        if(f){
            return dp[i][j];
        }
        else{
            return p[j]-p[i-1]-dp[i][j]; 
        }
    }
};