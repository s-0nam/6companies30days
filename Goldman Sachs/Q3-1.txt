// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;



 // } Driver Code Ends


class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
        vector<long long unsigned>pr(a.size(),1); pr[0]=a[0];
        for(int i=1;i<a.size();i++) pr[i]=pr[i-1]*a[i];
        int ans=0;
        for(int i=0;i<a.size();i++){
            int l=0,r=i,f=0;
            while(r>=l){
                if(r-l==1) f=1;
                int m=(unsigned(l)+unsigned(r))>>1;
                if(a[m]*k<pr[i]) r=m;
                else l=m;
                if(f) break;
            }
            if(a[l]*k<pr[i]) l--;
            int n=i-l;
            ans+=(n*(n+1))/2;
        }
        return ans;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        long long int k;
        cin >> n >> k;
        vector<int> arr(n);
        for (i = 0; i < n; i++) cin >> arr[i];
        Solution obj;
        cout << obj.countSubArrayProductLessThanK(arr, n, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends