// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;
void rotate (vector<vector<int> >& matrix);


 // } Driver Code Ends
//User function template for C++

/* matrix : given input matrix, you are require 
 to change it in place without using extra space */
void rotate(vector<vector<int> >& a)
{ int n=a[0].size(); //int x=1,y=2; swap(x,y); cout<<x<<y<<endl;
    int p=0,y=n-1,z=n,l=0,cc=n;
    for(int i=0;i<n/2;i++){
        int m=y; 
        for(int j=0;j<cc-1;j++){
            p=a[i][m]; int r=i,c=m,t=0;
            t=min(z-1,m-l); c-=t,r+=z-1-t; swap(p,a[r][c]);
            t=min(z-1,n-r-1-l); r+=t,c+=z-1-t; swap(p,a[r][c]);
            t=min(z-1,n-1-c-l); c+=t,r-=z-1-t; swap(p,a[r][c]);
            t=min(z-1,r-l); r-=t,c-=z-1-t; swap(p,a[r][c]); 
            m--;
        }
        // for(int i=0;i<n;i++){
        //     for(int j=0;j<n;j++) cout<<a[i][j]<<' ';
        //     cout<<endl;
        // }
         l++;
        cc-=2,z-=2,y--;
    }
}
 


// { Driver Code Starts.

int main()
{
    int t;
    cin>>t; 
    while(t--)
    {
        int n;
        cin>>n; 
        vector<vector<int> > matrix(n);
        for(int i=0; i<n; i++)
        {
            matrix[i].resize(n);
            for(int j=0; j<n; j++)
                cin>>matrix[i][j]; 
        }
        rotate(matrix);
        for (int i = 0; i < n; ++i)
        {
            for(int j=0; j<n; j++)
                cout<<matrix[i][j]<<" ";
            cout<<"\n";
        }
    }
    return 0;
}

  // } Driver Code Ends